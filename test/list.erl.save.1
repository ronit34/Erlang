-module(list).
-export([a/2]).

% a(List,List2)->
% 	Fun = fun(X) -> {X,List2,List2 * X} end,
% 	lists:map(Fun,List).



% a(X)-> 
% 	Fun = fun(X)->
% 		case X rem 2 of o -> {X, even}; _-> {X, odd} end end,
% 		lists:map(Fun,X).

% a(List)-> 
% 	Fun = fun(X)->
% 		{X,lists:sum(lists:seq(1,X))} end,
% 		lists:map(Fun,List).



